     1                                  %include 'in_out.asm'
     2                              <1> ;---------------   slen  -------------------
     3                              <1> ; Функция вычисления длины сообщения
     4                              <1> slen:                     
     5 00000000 6653                <1>     push    ebx             
     6 00000002 6689C3              <1>     mov     ebx, eax        
     7                              <1>     
     8                              <1> nextchar:                   
     9 00000005 67803800            <1>     cmp     byte [eax], 0   
    10 00000009 7404                <1>     jz      finished        
    11 0000000B 6640                <1>     inc     eax             
    12 0000000D EBF6                <1>     jmp     nextchar        
    13                              <1>     
    14                              <1> finished:
    15 0000000F 6629D8              <1>     sub     eax, ebx
    16 00000012 665B                <1>     pop     ebx             
    17 00000014 C3                  <1>     ret                     
    18                              <1> 
    19                              <1> 
    20                              <1> ;---------------  sprint  -------------------
    21                              <1> ; Функция печати сообщения
    22                              <1> ; входные данные: mov eax,<message>
    23                              <1> sprint:
    24 00000015 6652                <1>     push    edx
    25 00000017 6651                <1>     push    ecx
    26 00000019 6653                <1>     push    ebx
    27 0000001B 6650                <1>     push    eax
    28 0000001D E8E0FF              <1>     call    slen
    29                              <1>     
    30 00000020 6689C2              <1>     mov     edx, eax
    31 00000023 6658                <1>     pop     eax
    32                              <1>     
    33 00000025 6689C1              <1>     mov     ecx, eax
    34 00000028 66BB01000000        <1>     mov     ebx, 1
    35 0000002E 66B804000000        <1>     mov     eax, 4
    36 00000034 CD80                <1>     int     80h
    37                              <1> 
    38 00000036 665B                <1>     pop     ebx
    39 00000038 6659                <1>     pop     ecx
    40 0000003A 665A                <1>     pop     edx
    41 0000003C C3                  <1>     ret
    42                              <1> 
    43                              <1> 
    44                              <1> ;----------------  sprintLF  ----------------
    45                              <1> ; Функция печати сообщения с переводом строки
    46                              <1> ; входные данные: mov eax,<message>
    47                              <1> sprintLF:
    48 0000003D E8D5FF              <1>     call    sprint
    49                              <1> 
    50 00000040 6650                <1>     push    eax
    51 00000042 66B80A000000        <1>     mov     eax, 0AH
    52 00000048 6650                <1>     push    eax
    53 0000004A 6689E0              <1>     mov     eax, esp
    54 0000004D E8C5FF              <1>     call    sprint
    55 00000050 6658                <1>     pop     eax
    56 00000052 6658                <1>     pop     eax
    57 00000054 C3                  <1>     ret
    58                              <1> 
    59                              <1> ;---------------  sread  ----------------------
    60                              <1> ; Функция считывания сообщения
    61                              <1> ; входные данные: mov eax,<buffer>, mov ebx,<N>
    62                              <1> sread:
    63 00000055 6653                <1>     push    ebx
    64 00000057 6650                <1>     push    eax
    65                              <1>    
    66 00000059 66BB00000000        <1>     mov     ebx, 0
    67 0000005F 66B803000000        <1>     mov     eax, 3
    68 00000065 CD80                <1>     int     80h
    69                              <1> 
    70 00000067 665B                <1>     pop     ebx
    71 00000069 6659                <1>     pop     ecx
    72 0000006B C3                  <1>     ret
    73                              <1>     
    74                              <1> ;------------- iprint  ---------------------
    75                              <1> ; Функция вывода на экран чисел в формате ASCII
    76                              <1> ; входные данные: mov eax,<int>
    77                              <1> iprint:
    78 0000006C 6650                <1>     push    eax             
    79 0000006E 6651                <1>     push    ecx             
    80 00000070 6652                <1>     push    edx             
    81 00000072 6656                <1>     push    esi             
    82 00000074 66B900000000        <1>     mov     ecx, 0          
    83                              <1>     
    84                              <1> divideLoop:
    85 0000007A 6641                <1>     inc     ecx             
    86 0000007C 66BA00000000        <1>     mov     edx, 0          
    87 00000082 66BE0A000000        <1>     mov     esi, 10  
    88 00000088 66F7FE              <1>     idiv    esi    
    89 0000008B 6683C230            <1>     add     edx, 48  
    90 0000008F 6652                <1>     push    edx   
    91 00000091 6683F800            <1>     cmp     eax, 0   
    92 00000095 75E3                <1>     jnz     divideLoop  
    93                              <1> 
    94                              <1> printLoop:
    95 00000097 6649                <1>     dec     ecx       
    96 00000099 6689E0              <1>     mov     eax, esp  
    97 0000009C E876FF              <1>     call    sprint   
    98 0000009F 6658                <1>     pop     eax    
    99 000000A1 6683F900            <1>     cmp     ecx, 0   
   100 000000A5 75F0                <1>     jnz     printLoop  
   101                              <1> 
   102 000000A7 665E                <1>     pop     esi   
   103 000000A9 665A                <1>     pop     edx    
   104 000000AB 6659                <1>     pop     ecx   
   105 000000AD 6658                <1>     pop     eax           
   106 000000AF C3                  <1>     ret
   107                              <1> 
   108                              <1> 
   109                              <1> ;--------------- iprintLF   --------------------
   110                              <1> ; Функция вывода на экран чисел в формате ASCII
   111                              <1> ; входные данные: mov eax,<int>
   112                              <1> iprintLF:
   113 000000B0 E8B9FF              <1>     call    iprint          
   114                              <1> 
   115 000000B3 6650                <1>     push    eax             
   116 000000B5 66B80A000000        <1>     mov     eax, 0Ah        
   117 000000BB 6650                <1>     push    eax             
   118 000000BD 6689E0              <1>     mov     eax, esp       
   119 000000C0 E852FF              <1>     call    sprint          
   120 000000C3 6658                <1>     pop     eax             
   121 000000C5 6658                <1>     pop     eax             
   122 000000C7 C3                  <1>     ret
   123                              <1> 
   124                              <1> ;----------------- atoi  ---------------------
   125                              <1> ; Функция преобразования ascii-код символа в целое число
   126                              <1> ; входные данные: mov eax,<int>
   127                              <1> atoi:
   128 000000C8 6653                <1>     push    ebx             
   129 000000CA 6651                <1>     push    ecx             
   130 000000CC 6652                <1>     push    edx             
   131 000000CE 6656                <1>     push    esi             
   132 000000D0 6689C6              <1>     mov     esi, eax        
   133 000000D3 66B800000000        <1>     mov     eax, 0          
   134 000000D9 66B900000000        <1>     mov     ecx, 0          
   135                              <1>  
   136                              <1> .multiplyLoop:
   137 000000DF 6631DB              <1>     xor     ebx, ebx        
   138 000000E2 678A1C0E            <1>     mov     bl, [esi+ecx]
   139 000000E6 80FB30              <1>     cmp     bl, 48 
   140 000000E9 7C18                <1>     jl      .finished 
   141 000000EB 80FB39              <1>     cmp     bl, 57  
   142 000000EE 7F13                <1>     jg      .finished 
   143                              <1>  
   144 000000F0 80EB30              <1>     sub     bl, 48 
   145 000000F3 6601D8              <1>     add     eax, ebx
   146 000000F6 66BB0A000000        <1>     mov     ebx, 10  
   147 000000FC 66F7E3              <1>     mul     ebx  
   148 000000FF 6641                <1>     inc     ecx   
   149 00000101 EBDC                <1>     jmp     .multiplyLoop  
   150                              <1>  
   151                              <1> .finished:
   152 00000103 6683F900            <1>     cmp     ecx, 0  
   153 00000107 7409                <1>     je      .restore   
   154 00000109 66BB0A000000        <1>     mov     ebx, 10  
   155 0000010F 66F7F3              <1>     div     ebx     
   156                              <1>  
   157                              <1> .restore:
   158 00000112 665E                <1>     pop     esi   
   159 00000114 665A                <1>     pop     edx    
   160 00000116 6659                <1>     pop     ecx  
   161 00000118 665B                <1>     pop     ebx 
   162 0000011A C3                  <1>     ret
   163                              <1> 
   164                              <1> 
   165                              <1> ;------------- quit   ---------------------
   166                              <1> ; Функция завершения программы
   167                              <1> quit:
   168 0000011B 66BB00000000        <1>     mov     ebx, 0      
   169 00000121 66B801000000        <1>     mov     eax, 1      
   170 00000127 CD80                <1>     int     80h
   171 00000129 C3                  <1>     ret
     2                                  SECTION .data
     3 00000000 D092D0B2D0B5D0B4D0-     msg:DB 'Введите строку: ',0h
     3 00000009 B8D182D0B520D181D1-
     3 00000012 82D180D0BED0BAD183-
     3 0000001B 3A2000             
     4                                  
     5                                  SECTION .bss
     6 00000000 <res 50h>               buf1: RESB 80
     7                                  
     8                                  SECTION .text
     9                                      GLOBAL _start
    10                                      _start:
    11                                      
    12 0000012A 66B8[00000000]              mov eax, msg
    13 00000130 E80AFF                      call sprintLF
    14                                      
    15 00000133 66B9[00000000]              mov ecx, buf1
    16 00000139 66BA50000000                mov edx, 80
    17 0000013F E813FF                      call sread
    18 00000142 E8D6FF                      call quit
